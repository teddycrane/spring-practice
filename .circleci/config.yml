version: 2
orbs:
  maven: circleci/maven@1.2.0

jobs:
  build-application:
    docker:
      - image: cimg/openjdk:16.0.2-node
    steps:
      - checkout
      - run:
          name: Build Application
          command: mvn clean install -DskipTests
      - run:
          name: Package Application
          command: mvn package -DskipTests
      - store-artifacts:
          path: target/spring-practice-0.0.1.jar
          name: app.jar

  test:
    docker:
      - image: cimg/openjdk:16.0.2-node
    steps:
      - checkout
      - run:
          name: Test Application
          command: mvn clean verify -DskipITs
      - run:
          name: Clean up generated results
          command: |
            rm -rf target/classes
            rm -rf target/failsafe-reports
            rm -rf target/generated-sources 
            rm -rf target/generated-test-sources
            rm -rf target/maven-archiver
            rm -rf target/maven-status
            rm target/surefire-reports/*.dumpstream
            rm -rf target/test-classes
      # - run:
      #     name: Zip test coverage
      #     command: zip -r coverage.zip target/site/jacoco-ut
      # - store-artifacts:
      #     path: coverage.zip
      #     name: coverage.zip
      - store-artifacts:
          path: target/site/jacoco-ut
      - store-test-results:
          path: target/surefire-reports
      - run:
          name: Upload coverage statistics to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  compose:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Containerized Application
          command: docker-compose build
      # - run:
      #     name: Run Containerized Application and Run Deployed Integration Tests
      #     command: |
      #       docker-compose up -d
      #       docker-compose exec -d "$(docker ps --format "{{.ID}} {{.Names}}" | grep spring-practice_spring-practice_1 | cut -f1 -d " ")" bash ./ci-scripts/integration-tests.sh

  automation-local:
    docker:
      image: cimg/openjdk:16.0.2-node
    steps:
      - checkout
      - run:
          name: Create Environment Config
          command: echo "SECRET_KEY=$(openssl rand -base64 64)\nMYSQL_USER=${TEST_DB_USER}\nMYSQL_PASSWORD=${TEST_DB_PASSWORD}" > .env
      - run:
          name: Failsafe integration tests
          command: mvn clean verify -DskipTests # skip unit tests here to improve run time
      - store-test-results:
          path: target/failsafe-reports
          # Skip codecov upload for now until I figure out how to get both the failsafe and surefire results working

workflows:
  version: 2
  build:
    jobs:
      - build-application
      - test
      - automation-local:
          requires:
            - build-application
            - test
      - compose:
          requires:
            - build-application
            - test
          filters:
            branches:
              only:
                - main
