version: 2
orbs:
  maven: circleci/maven@1.2.0

jobs:
  build-application:
    docker:
      - image: cimg/openjdk:16.0.2-node
    steps:
      - checkout
      - run:
          name: Build Application
          command: mvn clean install -DskipTests
      - run:
          name: Package Application
          command: mvn package -DskipTests
      - store-artifacts:
          path: target/spring-practice-0.0.1.jar
          name: app.jar

  test:
    docker:
      - image: cimg/openjdk:16.0.2-node
    steps:
      - checkout
      - run:
          name: Test Application
          command: mvn test
      - run:
          name: Clean up generated results
          command: |
            rm -rf target/classes
            rm -rf target/failsafe-reports
            rm -rf target/generated-sources 
            rm -rf target/generated-test-sources
            rm -rf target/maven-archiver
            rm -rf target/maven-status
            rm target/surefire-reports/*.dumpstream
            rm -rf target/test-classes
      # - run:
      #     name: Zip test coverage
      #     command: zip -r coverage.zip target/site/jacoco-ut
      # - store-artifacts:
      #     path: coverage.zip
      #     name: coverage.zip
      - store-artifacts:
          path: target/site/jacoco-ut
      - store-test-results:
          path: target/surefire-reports
      - run:
          name: Upload coverage statistics to Codecov
          command: bash <(curl -s https://codecov.io/bash)

  compose:
    machine: true
    steps:
      - checkout
      - run:
          name: Build Containerized Application
          command: docker-compose build

  automation-local:
    machine: true
    steps:
      - checkout
      - run:
          name: Install JDK 11
          command: |
            sudo apt-get update && sudo apt-get install openjdk-11-jdk
            sudo update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java
            sudo update-alternatives --set javac /usr/lib/jvm/java-11-openjdk-amd64/bin/javac
            java -version
      - run:
          name: Create Environment Config
          command: echo "SECRET_KEY=$(openssl rand -base64 64)\nMYSQL_USER=${TEST_DB_USER}\nMYSQL_PASSWORD=${TEST_DB_PASSWORD}" > .env
      - run:
          name: Create Database Storage
          command: mkdir ~/mysql-data
      - run:
          name: Start Test MySQL DB and Populate With Seed Data
          command: docker run -d --name spring-test-db -p 3306:3306 -v mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD='${TEST_ROOT_PASSWORD}' -e MYSQL_USER='${TEST_DB_USER}' -e MYSQL_PASSWORD='${TEST_DB_PASSWORD}' -e MYSQL_DATABASE='SPRING' mysql 
      - run:
          name: Get Container ID and Load DB Config From File
          command: docker exec -i "$(docker ps --format \"{{.ID}}\")" mysql -u root --password=$TEST_ROOT_PASSWORD SPRING < ./containers/spring.sql
      - run:
          name: Run API Tests
          command: |
            mvn clean install -DskipTests
            mvn failsafe:integration-test
      - store-test-results:
          path: target/failsafe-reports
          # Skip codecov upload for now until I figure out how to get both the failsafe and surefire results working

workflows:
  version: 2
  build:
    jobs:
      - build-application
      - test
      - automation-local:
          requires:
            - build-application
            - test
      - compose:
          requires:
            - build-application
            - test
          filters:
            branches:
              only:
                - main
