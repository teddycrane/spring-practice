<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>
		4.0.0
	</modelVersion>
	<parent>
		<groupId>
			org.springframework.boot
		</groupId>
		<artifactId>
			spring-boot-starter-parent
		</artifactId>
		<version>
			2.5.5
		</version>
		<relativePath />
		<!-- lookup parent from repository -->
	</parent>
	<groupId>
		com.teddycrane
	</groupId>
	<artifactId>
		spring-practice
	</artifactId>
	<version>
		0.0.1
	</version>
	<name>
		spring-practice
	</name>
	<description>
		spring-practice
	</description>
	<properties>
		<java.version>
			11
		</java.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>
				org.springframework.boot
			</groupId>
			<artifactId>
				spring-boot-starter-data-jpa
			</artifactId>
		</dependency>
		<dependency>
			<groupId>
				org.springframework.boot
			</groupId>
			<artifactId>
				spring-boot-starter-web
			</artifactId>
		</dependency>
		<dependency>
			<groupId>
				mysql
			</groupId>
			<artifactId>
				mysql-connector-java
			</artifactId>
			<version>
				8.0.27
			</version>
		</dependency>
		<dependency>
			<groupId>
				com.microsoft.sqlserver
			</groupId>
			<artifactId>
				mssql-jdbc
			</artifactId>
			<scope>
				runtime
			</scope>
		</dependency>
		<dependency>
			<groupId>
				org.springframework.boot
			</groupId>
			<artifactId>
				spring-boot-devtools
			</artifactId>
			<scope>
				runtime
			</scope>
			<optional>
				true
			</optional>
		</dependency>
		<!--
		<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>
				org.mockito
			</groupId>
			<artifactId>
				mockito-core
			</artifactId>
			<version>
				4.0.0
			</version>
		</dependency>
		<dependency>
			<groupId>
				org.mockito
			</groupId>
			<artifactId>
				mockito-inline
			</artifactId>
			<version>
				4.0.0
			</version>
		</dependency>
		<dependency>
			<groupId>
				org.springframework.boot
			</groupId>
			<artifactId>
				spring-boot-starter-test
			</artifactId>
			<scope>
				test
			</scope>
			<exclusions>
				<exclusion>
					<groupId>
						junit
					</groupId>
					<artifactId>
						junit
					</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>
				org.jetbrains
			</groupId>
			<artifactId>
				annotations
			</artifactId>
			<version>
				22.0.0
			</version>
		</dependency>
		<dependency>
			<groupId>
				org.springframework.boot
			</groupId>
			<artifactId>
				spring-boot-starter-validation
			</artifactId>
			<version>
				2.5.6
			</version>
		</dependency>
		<dependency>
			<groupId>
				org.apache.logging.log4j
			</groupId>
			<artifactId>
				log4j-api
			</artifactId>
			<version>
				2.17.0
			</version>
		</dependency>
		<dependency>
			<groupId>
				org.apache.logging.log4j
			</groupId>
			<artifactId>
				log4j-core
			</artifactId>
			<version>
				2.17.0
			</version>
		</dependency>
		<dependency>
			<groupId>
				com.fasterxml.jackson.dataformat
			</groupId>
			<artifactId>
				jackson-dataformat-yaml
			</artifactId>
			<version>
				2.11.3
			</version>
		</dependency>
		<dependency>
			<groupId>
				com.fasterxml.jackson.core
			</groupId>
			<artifactId>
				jackson-databind
			</artifactId>
			<version>
				2.11.3
			</version>
		</dependency>
		<dependency>
			<groupId>
				com.github.javafaker
			</groupId>
			<artifactId>
				javafaker
			</artifactId>
			<version>
				1.0.2
			</version>
		</dependency>
		<dependency>
			<groupId>
				io.jsonwebtoken
			</groupId>
			<artifactId>
				jjwt-api
			</artifactId>
			<version>
				0.11.2
			</version>
		</dependency>
		<dependency>
			<groupId>
				io.jsonwebtoken
			</groupId>
			<artifactId>
				jjwt-impl
			</artifactId>
			<version>
				0.11.2
			</version>
			<scope>
				runtime
			</scope>
		</dependency>
		<dependency>
			<groupId>
				io.jsonwebtoken
			</groupId>
			<artifactId>
				jjwt-jackson
			</artifactId>
			<!-- or jjwt-gson if Gson is preferred -->
			<version>
				0.11.2
			</version>
			<scope>
				runtime
			</scope>
		</dependency>
		<dependency>
			<groupId>
				org.junit.jupiter
			</groupId>
			<artifactId>
				junit-jupiter
			</artifactId>
			<version>
				5.8.1
			</version>
			<scope>
				test
			</scope>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.5.2</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>
					org.springframework.boot
				</groupId>
				<artifactId>
					spring-boot-maven-plugin
				</artifactId>
			</plugin>
			<plugin>
				<artifactId>
					maven-surefire-plugin
				</artifactId>
				<configuration>
					<argline>
						@{argline}
					</argline>
					<excludes>
						<exclude>integration/**</exclude>
					</excludes>
				</configuration>
				<version>
					2.22.2
				</version>
			</plugin>
			<plugin>
				<artifactId>
					maven-failsafe-plugin
				</artifactId>
				<version>
					2.22.2
				</version>
				<goals>
					<goal>integration-test</goal>
				</goals>
			</plugin>
			<plugin>
				<groupId>
					org.jacoco
				</groupId>
				<artifactId>
					jacoco-maven-plugin
				</artifactId>
				<version>
					0.8.7
				</version>
				<executions>
					<!--
					Prepares the property pointing to the JaCoCo runtime agent which
					is passed as VM argument when Maven the Surefire plugin is executed.
					-->
					<execution>
						<id>
							pre-unit-test
						</id>
						<goals>
							<goal>
								prepare-agent
							</goal>
						</goals>
						<configuration>
							<!--
							<propertyName>
							surefireArgLine
							</propertyName>
							-->
						</configuration>
					</execution>
					<!--
					Ensures that the code coverage report for unit tests is created
					after unit tests have been run.
					-->
					<execution>
						<id>
							post-unit-test
						</id>
						<phase>
							test
						</phase>
						<goals>
							<goal>
								report
							</goal>
						</goals>
						<configuration>
							<!-- Sets the output directory for the code coverage report. -->
							<outputDirectory>
								${project.reporting.outputDirectory}/jacoco-ut
							</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>
							default-check
						</id>
						<goals>
							<goal>
								check
							</goal>
						</goals>
						<configuration>
							<rules>
								<!-- <rule>
									<element>
										CLASS
									</element>
									<excludes>
										<exclude>*Test</exclude>
										<exclude>IT*</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>
												BRANCH
											</counter>
											<value>
												COVEREDRATIO
											</value>
											<minimum>
												50%
											</minimum>
										</limit>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>50%</minimum>
										</limit>
									</limits>
								</rule> -->
								<rule>
									<element>
										BUNDLE	
									</element>
									<limits>
										<limit>
											<counter>
												BRANCH
											</counter>
											<value>
												COVEREDRATIO
											</value>
											<minimum>
												60%
											</minimum>
										</limit>
										<limit>
											<counter>
												LINE
											</counter>
											<value>
												COVEREDRATIO
											</value>
											<minimum>60%</minimum>
										</limit>
										<limit>
											<counter>
												COMPLEXITY
											</counter>
											<value>
												COVEREDRATIO
											</value>
											<minimum>
												60%
											</minimum>
										</limit>
										<!-- <limit>
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit> -->
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>